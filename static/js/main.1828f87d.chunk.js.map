{"version":3,"sources":["models/Box.ts","components/Square.tsx","components/App.tsx","index.tsx"],"names":["D","Status","Square","props","i","squareClick","b","className","onClick","reset","Array","fill","E","App","useState","X","turn","setTurn","PLAYING","isWinner","setIsWinner","setB","moves","setMoves","status","DRAW","WINNER","O","useEffect","handleSquareClick","m","renderSquare","map","_","Row","key","uid","rootElement","document","getElementById","render"],"mappings":"6HAGYA,EAMAC,E,+DANAD,K,KAAAA,E,MAAAA,E,OAAAA,M,cAMAC,K,WAAAA,E,gBAAAA,E,aAAAA,M,KCAL,IAAMC,EAAS,SAACC,GAAwB,IACrCC,EAAsBD,EAAtBC,EAAGC,EAAmBF,EAAnBE,YAAaC,EAAMH,EAANG,EAIxB,OACE,4BAAQC,UAAU,SAASC,QAJT,WAClBH,MAIGC,EAAEF,KCJHK,G,YAAaC,MADE,GACkBC,KAAKX,EAAEY,IAsF/BC,EApFH,WAAO,IAAD,EACQC,mBAAYd,EAAEe,GADtB,mBACTC,EADS,KACHC,EADG,OAEgBH,mBAAiBb,EAAOiB,SAFxC,mBAETC,EAFS,KAECC,EAFD,OAGEN,mBAAcL,GAHhB,mBAGTH,EAHS,KAGNe,EAHM,OAIUP,mBARN,GAIJ,mBAITQ,EAJS,KAIFC,EAJE,KAgBVC,EATU,IAAVF,GAAeH,IAAalB,EAAOiB,QAC9B,0BAAMX,UAAU,aAAaN,EAAOwB,MAEzCN,IAAalB,EAAOiB,QAChB,gBAAN,OAAuBF,GAElBA,IAAShB,EAAEe,EAAX,UAAkBd,EAAOyB,OAAzB,YAAmC1B,EAAE2B,GAArC,UAA8C1B,EAAOyB,OAArD,YAA+D1B,EAAEe,GAK1Ea,qBAAU,YAELtB,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,GAC7CN,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAOA,EAAE,IAAMA,EAAE,KAAON,EAAEY,IAE9CQ,EAAYnB,EAAOyB,UAEpB,CAACpB,IAEJ,IAAMuB,EAAoB,SAACzB,GAAD,OAAe,WACnCE,EAAEF,KAAOJ,EAAEY,GAAKO,IAAalB,EAAOyB,SAIxCH,GAAS,SAACO,GAAD,OAAOA,EAAI,KAChBd,IAAShB,EAAEe,EACbE,EAAQjB,EAAE2B,GAEVV,EAAQjB,EAAEe,GAGZM,EAAK,2BAAKf,GAAN,IAAS,CAACF,GAAIY,QAGde,EAAe,SAAC3B,GACpB,OAAO,kBAAC,EAAD,CAAQA,EAAGA,EAAGC,YAAawB,EAAkBzB,GAAIE,EAAGA,KAG7D,OACE,yBAAKC,UAAU,aACb,4BAAKiB,GACL,6BACGd,MA3DY,GA4DVC,KAAK,MACLqB,KACC,SAACC,EAAG7B,GAAJ,OACEA,EAAI,IAAM,GACR,kBAAC8B,EAAA,EAAD,CAAKC,IAAKC,YAAIhC,IACZ,8BAAO2B,EAAa3B,IACpB,8BAAO2B,EAAa3B,EAAI,IACxB,8BAAO2B,EAAa3B,EAAI,SAKpC,kBAAC8B,EAAA,EAAD,CAAK3B,UAAU,aACb,4BACEC,QAAS,WACPS,EAAQjB,EAAEe,GACVM,EAAKZ,GACLW,EAAYnB,EAAOiB,SACnBK,EA/EU,KA0Ed,YC/EFc,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAAC,EAAD,MAASH,I","file":"static/js/main.1828f87d.chunk.js","sourcesContent":["export interface Box {\n  [key: number]: string;\n}\nexport enum D {\n  E = \"\",\n  X = \"X\",\n  O = \"O\"\n}\n\nexport enum Status {\n  PLAYING = \"\",\n  WINNER = \"Winner\",\n  DRAW = \"Draw\"\n}\n","import React from \"react\";\nimport { Box } from \"../models/Box\";\n\ninterface SquareProps {\n  i: number;\n  squareClick: () => void;\n  b: Box;\n}\n\nexport const Square = (props: SquareProps) => {\n  const { i, squareClick, b } = props;\n  const handleClick = () => {\n    squareClick();\n  };\n  return (\n    <button className=\"square\" onClick={handleClick}>\n      {b[i]}\n    </button>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Row } from \"reactstrap\";\nimport { uid } from \"react-uid\";\n\nimport { Box, D, Status } from \"../models/Box\";\nimport { Square } from \"./Square\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../styles.css\";\n\nconst STARTING_MOVE = 0;\nconst ARRAY_LENGTH = 9;\nconst reset: D[] = Array(ARRAY_LENGTH).fill(D.E);\n\nconst App = () => {\n  const [turn, setTurn] = useState<D>(D.X);\n  const [isWinner, setIsWinner] = useState<Status>(Status.PLAYING);\n  const [b, setB] = useState<Box>(reset);\n  const [moves, setMoves] = useState<number>(STARTING_MOVE);\n\n  const computeStatus = () => {\n    if (moves === 9 && isWinner === Status.PLAYING) {\n      return <span className=\"ml-3 mt-3\">{Status.DRAW}</span>;\n    }\n    if (isWinner === Status.PLAYING) {\n      return `Next Player: ${turn}`;\n    }\n    return turn === D.X ? `${Status.WINNER} ${D.O}` : `${Status.WINNER} ${D.X}`;\n  };\n\n  const status = computeStatus();\n\n  useEffect(() => {\n    if (\n      (b[0] === b[1] && b[0] === b[2] && b[0] !== D.E) ||\n      (b[3] === b[4] && b[3] === b[5] && b[3] !== D.E) ||\n      (b[6] === b[7] && b[6] === b[8] && b[6] !== D.E) ||\n      (b[0] === b[3] && b[0] === b[6] && b[0] !== D.E) ||\n      (b[1] === b[4] && b[1] === b[7] && b[1] !== D.E) ||\n      (b[2] === b[5] && b[2] === b[8] && b[2] !== D.E) ||\n      (b[0] === b[4] && b[0] === b[8] && b[0] !== D.E) ||\n      (b[2] === b[4] && b[2] === b[6] && b[2] !== D.E)\n    ) {\n      setIsWinner(Status.WINNER);\n    }\n  }, [b]);\n\n  const handleSquareClick = (i: number) => () => {\n    if (b[i] !== D.E || isWinner === Status.WINNER) {\n      return;\n    }\n\n    setMoves((m) => m + 1);\n    if (turn === D.X) {\n      setTurn(D.O);\n    } else {\n      setTurn(D.X);\n    }\n\n    setB({ ...b, [i]: turn });\n  };\n\n  const renderSquare = (i: number) => {\n    return <Square i={i} squareClick={handleSquareClick(i)} b={b} />;\n  };\n\n  return (\n    <div className=\"ml-5 mt-3\">\n      <h3>{status}</h3>\n      <div>\n        {Array(ARRAY_LENGTH)\n          .fill(null)\n          .map(\n            (_, i) =>\n              i % 3 === 0 && (\n                <Row key={uid(i)}>\n                  <span>{renderSquare(i)}</span>\n                  <span>{renderSquare(i + 1)}</span>\n                  <span>{renderSquare(i + 2)}</span>\n                </Row>\n              )\n          )}\n      </div>\n      <Row className=\"ml-3 mt-3\">\n        <button\n          onClick={() => {\n            setTurn(D.X);\n            setB(reset);\n            setIsWinner(Status.PLAYING);\n            setMoves(STARTING_MOVE);\n          }}\n        >\n          Reset\n        </button>\n      </Row>\n    </div>\n  );\n};\nexport default App;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}